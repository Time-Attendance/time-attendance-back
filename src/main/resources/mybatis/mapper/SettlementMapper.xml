<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douzone.timeattendance.mapper.SettlementMapper">

    <!--정산 테이블 전체 조회-->
    <select id="findAll" resultType="com.douzone.timeattendance.dto.settlement.SettlementResponse"
    parameterType="com.douzone.timeattendance.dto.settlement.SettlementFindRequest">
        SELECT st.settlement_id AS settlementId,
               st.date AS date,
               u.user_id AS userId,
               u.user_code AS userCode,
               u.name AS name,
               u.dept AS dept,
               u.position AS position,
               wgr.work_group_type AS workGroupType,
               st.start_time AS startTime,
               st.end_time AS endTime,
               tr.start_work AS startWork,
               tr.leave_work AS leaveWork,
               wgr.time_range_type AS timeRangeType,
               wgr.start AS start,
               wgr.end AS end,
               st.working_time AS workingTime,
               st.over_time AS overTime,
               tr.work_state AS workState,
               st.day_type AS dayType,
               wgr.work_group_record_id AS workGroupRecordId
        FROM settlement AS st
        JOIN user AS u ON st.user_id = u.user_id AND u.company_id = #{companyId}
        JOIN time_record AS tr ON tr.user_id = st.user_id AND tr.date = st.date
        JOIN work_group_record AS wgr ON st.work_group_record_id = wgr.work_group_record_id
         <![CDATA[
        WHERE st.date >= #{start} AND st.date <= #{end}
        ]]>

    </select>

    <!--정산 스케줄러 실행-->
    <insert id="insertSettlement" useGeneratedKeys="true" keyProperty="settlementId">
        INSERT INTO settlement(user_id, date, start_time, end_time, working_time, over_time, day_type, date_created, date_updated, work_group_record_id)
        VALUES(#{userId}, #{date}, #{startTime}, #{endTime}, #{workingTime}, #{overTime}, #{dayType}, #{dateCreated}, #{dateUpdated}, #{workGroupRecordId})
    </insert>

    <!--정산 회원 수정-->
    <update id="updateSettlement" parameterType="com.douzone.timeattendance.dto.settlement.SettlementUpdateRequest">
        UPDATE settlement AS s
        JOIN time_record AS tr ON s.user_id = tr.user_id AND s.date = tr.date
        SET
            s.start_time = #{startTime},
            s.end_time = #{endTime},
            s.working_time = #{workingTime},
            s.over_time = #{overTime},
            tr.work_state = #{workState},
            s.date_updated = now()
        WHERE s.settlement_id = #{settlementId};
    </update>

<!--    정산 스케줄러 관련 로직   -->

    <!--회사, 근무그룹 별로 조회-->
    <select id="findCompanyAndWorkGroup" resultType="com.douzone.timeattendance.dto.settlement.SettlementFindCompanyDto"
    parameterType="com.douzone.timeattendance.dto.settlement.SettlementSearchDto">
        SELECT
            tr.date AS date,
            tr.user_id AS userId,
            wgr.work_group_type AS workGroupType,
            tr.start_work AS startWork,
            tr.leave_work AS leaveWork,
            tr.work_state AS workState,
            wgr.time_range_type AS timeRangeType,
            wgr.start AS start,
            wgr.end AS end
        FROM time_record AS tr
        JOIN distribution AS d ON tr.user_id = d.user_id
        JOIN work_group_record AS wgr ON d.work_group_id = wgr.work_group_id
        JOIN settlement AS st ON st.work_group_record_id = wgr.work_group_record_id
        JOIN work_group AS wg ON wg.work_group_id = wgr.work_group_id
        WHERE
            tr.date = #{date} -- 어제 날짜로 필터링
        AND wg.company_id = #{searchParam.companyId} -- 입력한 회사 아이디로 필터링
        AND wgr.work_group_id = #{searchParam.workGroupId} -- 입력한 작업 그룹 아이디로 필터링
        AND st.date = tr.date -- 추가 조건: st.date와 tr.date가 일치
        AND st.user_id = tr.user_id -- 추가 조건: st.user_id와 tr.user_id가 일치

    </select>

    <!--회사와 근무그룹 id List-->
    <select id="findCompanyIdAndWorkGroupIdList" resultType="com.douzone.timeattendance.dto.settlement.SettlementSearchDto">
        SELECT
            company_id AS companyId,
            work_group_id AS workGroupId
        FROM
            work_group
        ORDER BY companyId, workGroupId
    </select>



</mapper>