<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douzone.timeattendance.mapper.UserMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user(name,
                         email,
                         password,
                         phone,
                         hire_date,
                         birthday,
                         dept,
                         position,
                         distribution,
                         date_created,
                         date_updated,
                         date_deleted,
                         is_deleted,
                         role,
                         company_id)
        VALUES (#{name},
                #{email},
                #{password},
                #{phone},
                #{hireDate},
                #{birthday},
                #{dept},
                #{position},
                false,
                NOW(),
                NOW(),
                null,
                false,
                #{role},
                #{companyId})
    </insert>

    <!-- TODO: 동적 쿼리 적용 -->
    <update id="update">
        UPDATE user
        SET role = #{updateDto.role}
        WHERE user_id = #{userId};
    </update>

    <select id="existsEmail" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT *
                      FROM user
                      WHERE email = #{email})
    </select>

    <select id="findByUserId" resultType="User">
        SELECT user_id,
               name,
               email,
               password,
               phone,
               hire_date,
               birthday,
               dept,
               position,
               distribution,
               date_created,
               date_updated,
               date_deleted,
               is_deleted,
               role,
               company_id
        FROM user
        WHERE user_id = #{userId}
    </select>

    <select id="findByEmail" resultType="User">
        SELECT user_id,
               name,
               email,
               password,
               phone,
               hire_date,
               birthday,
               dept,
               position,
               distribution,
               date_created,
               date_updated,
               date_deleted,
               is_deleted,
               role,
               company_id
        FROM user
        WHERE email = #{email}
    </select>

    <select id="findAll" resultType="User">
        SELECT *
        FROM user
        WHERE company_id = #{companyId}
          AND is_deleted = false
    </select>

</mapper>